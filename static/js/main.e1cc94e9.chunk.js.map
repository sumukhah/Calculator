{"version":3,"sources":["Components/TouchKeys.js","Components/Result.js","Components/CalcLogic.js","Components/Calculator.js","App.js","index.js"],"names":["TouchKeys","this","props","type","react_default","a","createElement","className","onClick","onClickHandler","text","React","Component","Result","output","CalcLogic","state","operatorOverload","_state","operatorSelected","firstNumber","secondNumber","Number","Math","pow","DisplayKeys","Calculator","setState","console","log","_this2","src_Components_Result","map","txt","index","Components_TouchKeys","key","bind","App","src_Components_Calculator","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e1cc94e9.chunk.js","sourcesContent":["import React from 'react';\n\n\n//FOR DISPLAYING KEYS AND CLICK HANDLING OF A CALC\nclass TouchKeys extends React.Component {\n  render() {\n      if (this.props.type) {\n        return (\n          <div className=\"Operator\">\n            <div className=\"ui inverted segment\">\n              <button className=\"ui inverted blue basic button, big ui button\" \n                onClick={this.props.onClickHandler}>{this.props.text}\n              </button>\n            </div>\n          </div>\n        )\n      }\n\n      return (\n          <button className=\"tiny ui button, ui black button\" onClick={this.props.onClickHandler}>\n            {this.props.text}\n          </button>\n      )\n  }\n}\n\nexport default TouchKeys;","import React from 'react';\nimport styles from './Result.css'\n\nconst Result = (props) => {\n    return <div className='Result'>\n        {props.output || 0}\n    </div>\n}\n\nexport default Result;","const CalcLogic = (text, state) => {\n  \n  let operatorOverload;\n\n  let {operatorSelected, firstNumber, secondNumber} = state;\n  \n  if (text%1==0 || text==='.') {\n    operatorSelected===''? firstNumber=firstNumber+text:secondNumber=secondNumber+text;\n  }\n\n  else \n  if (text==='AC') {\n    return  {\n      operatorSelected : '',\n      firstNumber : '',\n      secondNumber : '',\n    };\n  }\n  \n  else \n  if (text==='+/-') {\n     firstNumber = 0 - firstNumber\n  }\n\n  else if(text=='√') {\n    operatorSelected = '^'\n    secondNumber==0.5?firstNumber=secondNumber:secondNumber=0.5\n  }\n\n  else\n   { operatorOverload = text!=='='&&operatorSelected!==''?text:null\n     operatorSelected = text==='='?operatorSelected:text;\n  }\n\n  if  (text==='=' || operatorOverload)\n  {\n\n  firstNumber = Number(firstNumber);\n  secondNumber = Number(secondNumber);\n  \n  if (firstNumber && secondNumber) {\n  switch (operatorSelected) {\n  \n    case '+':\n        firstNumber = firstNumber+secondNumber;\n        secondNumber = ''\n        break;\n    \n        case '-':\n          firstNumber = firstNumber-secondNumber;\n          secondNumber = ''\n          break;\n        \n        case 'x':\n          firstNumber = firstNumber*secondNumber;\n          secondNumber = ''\n          break;\n        \n        case '÷':\n          firstNumber = firstNumber/secondNumber;\n          secondNumber = ''\n          break;\n\n        case '^':\n          firstNumber = firstNumber**secondNumber;\n          secondNumber = ''\n          break;\n\n        case '=':\n          return {operatorSelected:'', firstNumber, secondNumber:''}\n          \n\n  }}\n  }\n\n  return state = {operatorSelected, firstNumber, secondNumber};\n\n}\n\n \n\nexport default CalcLogic","import React from 'react';\nimport TouchKeys from './TouchKeys';\nimport Result from './Result';\nimport styles  from './Calculator.css'\nimport CalcLogic from './CalcLogic'\n\nconst DisplayKeys = [\n  {text: '7'},\n  {text: '8'},\n  {text: '9'},\n  {text: 'AC', type: 'Operator'},\n  {text: '4'},\n  {text: '5'},\n  {text: '6'},\n  {text: 'x', type: 'Operator'},\n  {text: '1'},\n  {text: '2'},\n  {text: '3'},\n  {text: '+', type: 'Operator'},\n  {text: '+/-', type: 'Operator'},\n  {text: '0'},\n  {text: '.'},\n  {text: '-', type: 'Operator'},\n  {text: '√', type: 'Operator'},\n  {text: '^', type: 'operator'},\n  {text: '÷', type: 'Operator'},\n  {text: '=', type: 'Operator'},\n]\n\nclass Calculator extends React.Component {\n\n  state = {\n\n    operatorSelected : '',\n    firstNumber : '',\n    secondNumber : '',\n  }\n\n  onClickHandler(text) {\n    this.setState(CalcLogic(text, this.state))\n    console.log(this.state)\n  }\n\n  render() {\n    return (\n      <div className=\"Calculator\">\n        <div className=\"container\">\n             <i className=\"github square icon big\"></i>\n          i can catch only mouse \n          <div className='ResultScreen'>\n            <Result output={this.state.secondNumber!=''?this.state.secondNumber:this.state.firstNumber}/>\n          </div>\n        \n          <div className=\"grid\">\n            {DisplayKeys.map(\n              (txt, index) => <TouchKeys \n                                text={txt.text}  \n                                type={txt.type} \n                                key={txt.text} \n                                onClickHandler={this.onClickHandler.bind(this, txt.text)}\n                              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;","import React from 'react';\nimport Calculator from './Components/Calculator';\n\n\nclass App extends React.Component {\n  \n  render(){\n    return <div>\n      <Calculator />\n   \n    </div>\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App /> ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}